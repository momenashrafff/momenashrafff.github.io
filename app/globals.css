@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom cursor styles for Software Developer Mode */
body {
  cursor: auto;
}

.cursor-dot,
.cursor-outline {
  pointer-events: none;
  position: fixed;
  top: 50%;
  left: 50%;
  border-radius: 50%;
  z-index: 9999;
  transition: opacity 0.3s ease-in-out;
  transform: translate(-50%, -50%);
  will-change: transform;
}

.cursor-dot {
  width: 4px;
  height: 4px;
  background-color: rgb(124, 58, 237);
  z-index: 10000;
  margin: 0;
  padding: 0;
}

.cursor-outline {
  width: 32px;
  height: 32px;
  border: 1.5px solid rgba(124, 58, 237, 0.5);
  transition: all 0.2s ease-out;
  margin: 0;
  padding: 0;
}

@media (max-width: 768px) {
  body {
    cursor: auto;
  }

  .cursor-dot,
  .cursor-outline {
    display: none !important;
  }
}

/* Timeline styles */
.timeline-line {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  width: 2px;
  background: linear-gradient(to bottom, transparent, currentColor 10%, currentColor 90%, transparent);
  transform: translateX(-50%);
}

/* Particle animation */
.particles-container {
  position: absolute;
  width: 100%;
  height: 100%;
}

.particle {
  position: absolute;
  left: var(--x);
  top: var(--y);
  width: var(--size);
  height: var(--size);
  background-color: var(--color);
  border-radius: 50%;
  animation: float var(--duration) infinite;
  animation-delay: var(--delay);
}

@keyframes float {
  0%,
  100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(50px, -50px);
  }
  50% {
    transform: translate(100px, 0);
  }
  75% {
    transform: translate(50px, 50px);
  }
}

/* Glitch effects for hacker mode */
.glitch-wrapper {
  position: relative;
  display: inline-block;
}

.glitch {
  position: relative;
  display: inline-block;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  left: 2px;
  text-shadow: -1px 0 red;
  animation: glitch-animation 2s infinite linear alternate-reverse;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
}

.glitch::after {
  left: -2px;
  text-shadow: 1px 0 blue;
  animation: glitch-animation 3s infinite linear alternate-reverse;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
}

@keyframes glitch-animation {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-2px);
  }
  95% {
    transform: translateX(2px);
  }
  100% {
    transform: translateX(0);
  }
}

/* Circuit board background */
.circuit-board {
  background-image: 
    linear-gradient(rgba(0, 255, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 0, 0.1) 1px, transparent 1px),
    linear-gradient(rgba(0, 255, 0, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 0, 0.05) 1px, transparent 1px);
  background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;
  background-position: -1px -1px, -1px -1px, -1px -1px, -1px -1px;
}

/* Glitch text animation */
.glitch-text {
  animation: glitch-text 3s infinite;
}

@keyframes glitch-text {
  0% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  85% {
    opacity: 0.8;
  }
  86% {
    opacity: 1;
  }
  87% {
    opacity: 0.8;
  }
  88% {
    opacity: 1;
  }
  89% {
    opacity: 0.8;
  }
  90% {
    opacity: 1;
  }
}

@keyframes glitch-animation {
  0% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(0);
  }
  85% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-2px);
  }
  95% {
    transform: translateX(2px);
  }
  100% {
    transform: translateX(0);
  }
}

